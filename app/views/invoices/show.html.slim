== content_for(:page_name, 'Invoices')

/ Payment modal
== render 'payment'
== render 'mailings'
== render 'journals'
== render 'comment'

/ Navigation
section#container.thin-menu
  header.header.black-bg
    == link_to '< Back', invoices_path, class: 'logo'
    .top-menu
      ul.nav.pull-right.top-menu
        li data-content-toggle='#invoice-content #show, #invoice-content #edit' data-button-values='Edit,Show'
          a.btn.btn-theme.btn-default
            | Edit
        li
          a.btn.btn-theme.btn-default data-toggle="modal" href="#paymentModal#{@invoice.id}"
            | Receive payment
        li
          a.btn.btn-theme.btn-default data-toggle="modal" href="#mailingModal#{@invoice.id}"
            | Send
        li
          = link_to "Download PDF", invoice_path(@invoice, :format => 'pdf'), \
                    target: '_blank', class: 'btn btn-theme btn-default'
        li
          a.btn.btn-theme.btn-default data-toggle="modal" href="#commentsModal#{@invoice.id}"
            | Notes
            span.badge.comments_count= @invoice.comments.count
        li
          a.btn.btn-theme.btn-default data-toggle="modal" href="#jurnalsModal#{@invoice.id}"
            | Activities
            span.badge= @invoice.journals.count
br
/ Content
.container.mt
  .row.mt
    .col-md-8#invoice-content
      #show
        = render 'show_content'
      #edit.hidden
        = render 'form'

    .col-md-4
      .panel.panel-default
        .panel-heading Info
        .panel-body
          p= "Status: #{@invoice.state.capitalize}"
          p= "Balance: #{@invoice.balance}"
          p= "Total: #{@invoice.total}"

          = render 'shared/moris_donut', \
                   { percent_payed: @invoice.percent_payed.round(2) }

      .panel.panel-default
        .panel-heading Payments
        .panel-body
          table.table
            thead
              tr
                th Date
                th amount
            tbody
              - @invoice.payments.each do |payment|
                tr
                  td= payment.created_at.try(:strftime, '%B %-d, %Y')
                  td= payment.amount
